version: '3'
services:

#  discovery:
#
#    container_name: service-discovery
#    build:
#      context: ./eureka-server
#      dockerfile: Dockerfile
#    ports:
#      - "8761:8761"
#
#
#  gateway:
#
#    container_name: service-gateway
#    build:
#      context: ./zuul-gateway
#      dockerfile: Dockerfile
#    ports:
#      - "8762:8762"
#    depends_on:
#      - discovery
#    links:
#      - discovery:discovery
#   elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
#    container_name: elasticsearch
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    restart: always
#    environment:
#      - node.name=elasticsearch
#      - discovery.type=single-node
##     - discovery.seed_hosts=elasticsearch
##     - cluster.initial_master_nodes=elasticsearch
#      - cluster.name=docker-cluster
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

 


#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    ports:
#      - 2181:2181
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#
#  kafka:
#      image: confluentinc/cp-kafka:latest
#      ports:
#        - 9092:9092
#      depends_on:
#        - zookeeper
#      environment:
#        KAFKA_BROKER_ID: 1
#        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#        # For more details see See https://rmoff.net/2018/08/02/kafka-listeners-explained/
#        #KAFKA_LISTENERS: LISTENER_INSIDE://kafka:29092,LISTENER_HOST://localhost:9092
#        KAFKA_ADVERTISED_LISTENERS: LISTENER_INSIDE://kafka:29092,LISTENER_HOST://192.168.99.100:9092
#        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INSIDE:PLAINTEXT,LISTENER_HOST:PLAINTEXT
#        KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INSIDE
#        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#        KAFKA_HEAP_OPTS: " -Xmx256m -Xms256m"


  authentication:
    build:
      context: JWTauthentication
      dockerfile: Dockerfile
    depends_on:
      - config-server
      - mysql
      - discovery-server
    restart: always
    ports:
      - "8098:8098"
    command:  sh -c "/wait  && java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar"
    environment:
        - WAIT_HOSTS=config-server:8888
        - WAIT_HOSTS_TIMEOUT=3000
        - WAIT_SLEEP_INTERVAL=30
        - WAIT_HOST_CONNECT_TIMEOUT=3000
############################################
  config-server:
    build:
      context: config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
#############################################
  mysql:
      image: mysql:latest

      ports:
        - "3306:3306"
      environment:
          MYSQL_DATABASE: 'security'
          # So you don't have to use root, but you can if you like
          MYSQL_USER: 'root'
          # You can use whatever password you like
          MYSQL_PASSWORD: 'root'
          # Password for root access
          MYSQL_ROOT_PASSWORD: 'root'

      expose:
        # Opens port 3306 on the container
        - '3306'
####################################################################
  discovery-server:
    build:
      context: discovery-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"

